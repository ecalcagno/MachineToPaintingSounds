#N canvas 168 133 1024 692 10;
#X obj 23 112 delwrite~ del1 3000;
#X obj 238 422 vd~ del1;
#X obj 701 117 *~;
#X obj 716 97 line~;
#X obj 716 78 pack 0 5;
#X obj 636 -65 vsl 15 128 0.01 1 1 0 empty Effect_Vol Effect_Volume
0 -9 0 10 -260097 -1 -1 10788 1;
#X obj 237 254 phasor~;
#X obj 240 380 *~;
#X floatatom 371 65 10 0 0 0 - - -;
#X obj 341 -7 hsl 128 15 0 1 0 0 empty Speed Speed -2 -8 0 10 -262144
-1 -1 3384 1;
#X obj 341 45 hsl 128 15 0 1000 0 0 empty Depth Depth -2 -8 0 10 -262144
-1 -1 3760 1;
#X obj 380 329 +~ 0.5;
#X obj 380 353 wrap~;
#X obj 379 389 *~;
#X obj 165 113 delwrite~ del2 3000;
#X obj 381 447 vd~ del2;
#X obj 342 -56 hsl 128 15 0 0.9 0 0 empty Feedback Feedback -2 -8 0
10 -262144 -1 -1 12700 1;
#X obj 176 413 cos~;
#X obj 176 440 *~;
#X obj 176 361 -~ 0.5;
#X obj 176 387 *~ 0.5;
#X obj 460 484 cos~;
#X obj 461 511 *~;
#X obj 460 432 -~ 0.5;
#X obj 460 458 *~ 0.5;
#X obj 481 130 *~;
#X obj 516 103 line~;
#X obj 517 84 pack 0 5;
#X obj 518 -66 vsl 15 128 0.01 1 1 0 empty Main_Vol Main_Signal_Volume
0 -9 0 10 -4034 -1 -1 0 1;
#X obj 593 81 receive~ out_del1;
#X obj 608 101 receive~ out_del2;
#X obj 51 65 receive~ out_del1;
#X obj 179 63 receive~ out_del2;
#X obj 137 38 line~;
#X obj 138 19 pack 0 5;
#X obj 179 84 *~;
#X obj 51 85 *~;
#X obj 238 230 line~;
#X obj 239 211 pack 0 5;
#X floatatom 373 11 10 0 0 0 - - -;
#X floatatom 372 -39 10 0 0 0 - - -;
#X text 16 138 Write incoming signal + feedback from delays;
#X obj 862 -109 loadbang;
#X msg 859 -76 \; Main_Vol 1 \; Effect_Vol 0.6 \; Feedback 0.9 \; Speed
0.07 \; Depth 322 \; pd dsp 1 \;;
#X obj 302 359 line~;
#X obj 303 340 pack 0 5;
#X obj 239 400 *~;
#X obj 380 424 *~;
#X text 296 252 Este phasor controla el largo de dos delays;
#X text 427 324 Esto corre el phasor para que cuando una de las señales
esta creciendo la otra esta bajando.;
#X text 430 386 <-- La salida es potenciada para que crezca rapidamente.
;
#X text 515 494 A su vez la señal del fasor es tambien usada para
generar una envolvente de cada linea de delay;
#X obj 147 -60 inlet~;
#X obj 250 531 s~ out_del1;
#X obj 378 529 s~ out_del2;
#X obj 685 208 outlet~;
#X msg 554 2 0;
#X obj 554 -35 loadbang;
#X obj 675 -38 loadbang;
#X obj 315 -84 maxlib/scale 0 1 0 0.9;
#X obj 196 -60 maxlib/scale 0 1 0 0.9;
#X obj 200 23 maxlib/scale 0 1 0 1000;
#X obj 200 -91 r Xmano1;
#X obj 302 -107 r Ymano1;
#X msg 675 -1 0.5;
#X connect 1 0 18 1;
#X connect 2 0 55 0;
#X connect 3 0 2 1;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 6 0 7 1;
#X connect 6 0 11 0;
#X connect 6 0 19 0;
#X connect 7 0 46 0;
#X connect 9 0 38 0;
#X connect 9 0 39 0;
#X connect 10 0 8 0;
#X connect 10 0 45 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 12 0 13 1;
#X connect 12 0 23 0;
#X connect 13 0 47 0;
#X connect 15 0 22 1;
#X connect 16 0 34 0;
#X connect 16 0 40 0;
#X connect 17 0 18 0;
#X connect 18 0 53 0;
#X connect 19 0 20 0;
#X connect 20 0 17 0;
#X connect 21 0 22 0;
#X connect 22 0 54 0;
#X connect 23 0 24 0;
#X connect 24 0 21 0;
#X connect 26 0 25 1;
#X connect 27 0 26 0;
#X connect 28 0 27 0;
#X connect 29 0 2 0;
#X connect 30 0 2 0;
#X connect 31 0 36 0;
#X connect 32 0 35 0;
#X connect 33 0 36 1;
#X connect 33 0 35 1;
#X connect 34 0 33 0;
#X connect 35 0 14 0;
#X connect 36 0 0 0;
#X connect 37 0 6 0;
#X connect 38 0 37 0;
#X connect 42 0 43 0;
#X connect 44 0 46 1;
#X connect 44 0 47 1;
#X connect 45 0 44 0;
#X connect 46 0 1 0;
#X connect 47 0 15 0;
#X connect 52 0 0 0;
#X connect 52 0 14 0;
#X connect 52 0 25 0;
#X connect 56 0 28 0;
#X connect 57 0 56 0;
#X connect 58 0 64 0;
#X connect 59 0 16 0;
#X connect 60 0 9 0;
#X connect 61 0 10 0;
#X connect 62 0 60 0;
#X connect 62 0 61 0;
#X connect 63 0 59 0;
#X connect 64 0 5 0;
